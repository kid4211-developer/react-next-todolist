import { TodoType } from "../types/todo";

/**
 * 1. 항상 reducer() 함수를 export default 해야함
 * 2. 항상 모듈의 action 생성자들을 함수 형태로 export 해야함
 * 3. reducer/ACTION_TYPE 형태의 action type을 가져야함
 */

/**
 * ducks pattern
 */

// 1. action type 정의
export const INIT_TODO_LIST = "todo/INIT_TODO_LIST";

// 2. 액션 생성자 정의
export const setTodo = (payload: TodoType[]) => {
  return {
    type: INIT_TODO_LIST,
    payload,
  };
};

export const todoActions = { setTodo };

interface TodoReduxState {
  todos: TodoType[];
}

// 3. 초기 상태
const initialState: TodoReduxState = {
  todos: [],
};

// 4. Reducer 정의 - 항상 reducer()란 이름의 함수를 export default 해줘야 함
/**
 * - reducer는 이전 상태와 액션객체를 parameter로 받아 새로운 상태를 만들어 반환함
 * - 그리고 만들어진 새로운 상태를 store로 업데이트함
 * - 각 component는 이 store를 subscribe 하고 있고, store에 변화가 생기면 상태를 전달받아 화면이 변화함
 */
export default function reducer(state = initialState, action: any) {
  switch (action.type) {
    case INIT_TODO_LIST:
      const newState = { ...state, todos: action.payload };
      return newState;
    default:
      return state;
  }
}
